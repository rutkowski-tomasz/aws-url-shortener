name: shorten-url-lambda pipeline

on:
  push:
    branches:
      - '**'
    paths:
      - 'shorten-url-lambda/**'
  pull_request:
    branches:
      - '**'
    paths:
      - 'shorten-url-lambda/**'

jobs:
  test:
    name: Unit testing
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: shorten-url-lambda/src
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 20.x

      - name: Install dependencies
        run: npm ci

      - name: Run Jest tests
        run: npm test
  
  terraform_checks:
    name: Terraform checks
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: shorten-url-lambda/terraform
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Terraform setup
        uses: hashicorp/setup-terraform@v3
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform init
        run: terraform init

      - name: Terraform validate
        run: terraform validate
      
      - name: Terraform plan
        run: terraform plan

  deploy:
    name: Deployment
    if: github.ref == 'refs/heads/main'
    needs: [test, terraform_checks] 
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: shorten-url-lambda/terraform
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Terraform setup
        uses: hashicorp/setup-terraform@v3
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform init
        run: terraform init

      - name: Package Lambda function
        working-directory: shorten-url-lambda/src
        run: zip -r ../terraform/deployment-package.zip .

      - name: Terraform apply
        run: terraform apply -auto-approve
