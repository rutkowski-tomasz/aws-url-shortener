name: shorten-url-lambda pipeline

on:
  push:
    branches:
      - '**'
    paths:
      - 'shorten-url-lambda/**'
  pull_request:
    branches:
      - '**'
    paths:
      - 'shorten-url-lambda/**'
  workflow_dispatch:

jobs:
  test:
    name: Unit testing
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: shorten-url-lambda/src
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 20.x

      - name: Install dependencies
        run: npm ci

      - name: Run Jest tests
        run: npm test
  
  plan_dev:
    name: Plan deployment to dev
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: shorten-url-lambda/terraform
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Terraform setup
        uses: hashicorp/setup-terraform@v3
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform init
        run: terraform init

      - name: Terraform workspace selection
        run: terraform workspace new us-dev-shorten-url-lambda

      - name: Terraform validate
        run: terraform validate
      
      - name: Terraform plan
        run: terraform plan -var="environment=dev"

  deploy_dev:
    name: Deploy to dev
    if: github.ref == 'refs/heads/main'
    needs: [test, plan_dev] 
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: shorten-url-lambda/terraform
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Terraform setup
        uses: hashicorp/setup-terraform@v3
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform init
        run: terraform init

      - name: Terraform workspace selection
        run: terraform workspace new us-dev-shorten-url-lambda

      - name: Package Lambda function
        working-directory: shorten-url-lambda/src
        run: zip -r ../terraform/deployment-package.zip .

      - name: Terraform apply
        run: terraform apply -auto-approve -var="environment=dev"

  plan_prd:
    name: Plan deployment to prd
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: shorten-url-lambda/terraform
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Terraform setup
        uses: hashicorp/setup-terraform@v3
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform init
        run: terraform init

      - name: Terraform workspace selection
        run: terraform workspace new us-prd-shorten-url-lambda

      - name: Terraform validate
        run: terraform validate
      
      - name: Terraform plan
        run: terraform plan -var="environment=prd"

  deploy_prd:
    name: Deploy to prd
    if: github.ref == 'refs/heads/main'
    needs: [plan_prd] 
    runs-on: ubuntu-latest
    steps:
      - uses: trstringer/manual-approval@v1
        with:
          secret: ${{ github.TOKEN }}
          approvers: rutkowski-tomasz

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Terraform setup
        uses: hashicorp/setup-terraform@v3
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform init
        run: terraform init

      - name: Terraform workspace selection
        run: terraform workspace new us-prd-shorten-url-lambda

      - name: Package Lambda function
        working-directory: shorten-url-lambda/src
        run: zip -r ../terraform/deployment-package.zip .

      - name: Terraform apply
        run: terraform apply -auto-approve -var="environment=prd"
