name: get-url-lambda pipeline

on:
  push:
    branches:
      - '**'
    paths:
      - 'get-url-lambda/**'
  pull_request:
    branches:
      - '**'
    paths:
      - 'get-url-lambda/**'
  workflow_dispatch:

jobs:
  test:
    name: Unit testing
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: get-url-lambda
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Check architecture
        run: echo "is_aarch64=$(if [ $(uname -m) = 'aarch64' ]; then echo 'true'; else echo 'false'; fi)" >> $GITHUB_ENV

      - name: Set up Python
        if: env.is_aarch64 != 'true'
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Set up ARM Python
        if: env.is_aarch64 == 'true'
        uses: deadsnakes/action@v2.1.1
        with:
          python-version: "3.12"
      
      - name: Install dependencies
        run: |
            python -m pip install --upgrade pip
            pip install -r requirements.txt
      
      - name: Run tests
        run: python -m unittest discover -v -s ./tests/ -p "*_test.py"

  plan_dev:
    uses: ./.github/workflows/terraform-plan-workflow.yml
    with:
      project: get-url-lambda
      env: dev
    secrets: inherit

  deploy_dev:
    needs: [plan_dev]
    uses: ./.github/workflows/terraform-deploy-workflow.yml
    with:
      project: get-url-lambda
      env: dev
    secrets: inherit
  
  plan_prd:
    needs: [deploy_dev]
    uses: ./.github/workflows/terraform-plan-workflow.yml
    with:
      project: get-url-lambda
      env: prd
    secrets: inherit

  deploy_prd:
    needs: [plan_prd]
    uses: ./.github/workflows/terraform-deploy-workflow.yml
    with:
      project: get-url-lambda
      env: prd
    secrets: inherit
